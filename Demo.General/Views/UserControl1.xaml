<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Demo.General.Views"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:il="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions" x:Class="Demo.General.Views.UserControl1"
             mc:Ignorable="d" 
             d:DesignHeight="450" 
    d:DesignWidth="800" 
    d:DataContext="{d:DesignData /SampleData/SampleDataSource/SampleDataSource.xaml}">
    <UserControl.Resources>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"
                                Padding="1"
                                SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <i:Interaction.Behaviors>
                                        <il:FluidMoveBehavior/>
                                    </i:Interaction.Behaviors>
                                </ItemsPresenter>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="LstBoxItemTemplate"
                      DataType="User">
            <Border>
                <StackPanel x:Name="stackPanel">
                    <TextBlock Text="{Binding Name}" />
                    <TextBlock Text="{Binding Sex}"
                               HorizontalAlignment="Left" />
                </StackPanel>
            </Border>
        </DataTemplate>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>

        <Style x:Key="ListBoxItemContainerStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="FontScaleAnimation" AutoReverse="False">
                                <DoubleAnimation Duration="0:0:3" 
                                                 Storyboard.TargetProperty="FontSize"
                                                 To="22">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" Amplitude="5"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true" d:IsLocked="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:IsLocked="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource FontScaleAnimation}"/>
                                </Trigger.EnterActions>
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ItemsPanelTemplate x:Key="ItemsPanelTemplate">
            <StackPanel/>
        </ItemsPanelTemplate>

        <Style x:Key="RingStyle.Circle" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="RingRotateAnimate" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" 
                                                               Storyboard.TargetName="canvas0">
                                    <SplineDoubleKeyFrame KeySpline="0.02,0.33,1,1" KeyTime="0" Value="-110"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="10" KeySpline="0,0,0.38,0.77"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="93" KeySpline="0,0.19,0.07,0.72"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.6" Value="205" KeySpline="0.56,0.18,0.95,0.75"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2" Value="357"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2.7" Value="439"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.2" Value="585"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.11" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" 
                                                               Storyboard.TargetName="canvas1">
                                    <SplineDoubleKeyFrame KeySpline="0.02,0.33,1,1" KeyTime="0" Value="-110"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="10" KeySpline="0,0,0.38,0.77"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="93" KeySpline="0,0.19,0.07,0.72"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.6" Value="205" KeySpline="0.56,0.18,0.95,0.75"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2" Value="357"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2.7" Value="439"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.2" Value="585"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.21" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" 
                                                               Storyboard.TargetName="canvas2">
                                    <SplineDoubleKeyFrame KeySpline="0.02,0.33,1,1" KeyTime="0" Value="-110"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="10" KeySpline="0,0,0.38,0.77"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="93" KeySpline="0,0.19,0.07,0.72"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.6" Value="205" KeySpline="0.56,0.18,0.95,0.75"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2" Value="357"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2.7" Value="439"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.2" Value="585"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.31" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" 
                                                               Storyboard.TargetName="canvas3">
                                    <SplineDoubleKeyFrame KeySpline="0.02,0.33,1,1" KeyTime="0" Value="-110"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="10" KeySpline="0,0,0.38,0.77"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="93" KeySpline="0,0.19,0.07,0.72"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.6" Value="205" KeySpline="0.56,0.18,0.95,0.75"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2" Value="357"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2.7" Value="439"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.2" Value="585"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.41" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" 
                                                               Storyboard.TargetName="canvas4">
                                    <SplineDoubleKeyFrame KeySpline="0.02,0.33,1,1" KeyTime="0" Value="-110"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="10" KeySpline="0,0,0.38,0.77"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="93" KeySpline="0,0.19,0.07,0.72"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.6" Value="205" KeySpline="0.56,0.18,0.95,0.75"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2" Value="357"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2.7" Value="439"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.2" Value="585"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.11" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvas0">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.21" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvas1">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.31" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvas2">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.41" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvas3">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.41" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvas4">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Canvas x:Name="canvas0" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Ellipse Height="5" 
                                         Width="5"
                                         Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                            <Canvas x:Name="canvas1" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Ellipse Height="5" 
                                    Width="5"
                                    Fill="{TemplateBinding Foreground}"/>
                                <Canvas x:Name="canvas" RenderTransformOrigin="0.5,0.5" Height="30" Width="30">
                                    <Canvas.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Canvas.RenderTransform>
                                    <Ellipse Height="5" 
                                        Width="5"
                                        Fill="{TemplateBinding Foreground}"/>
                                </Canvas>
                            </Canvas>
                            <Canvas x:Name="canvas2" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Ellipse Height="5" 
                                    Width="5"
                                    Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                            <Canvas x:Name="canvas3" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Ellipse Height="5" 
                                    Width="5"
                                    Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                            <Canvas x:Name="canvas4" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Ellipse Height="5" 
                                    Width="5"
                                    Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsIndeterminate" Value="True">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="RingRotateAnimate_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="RingRotateAnimate_BeginStoryboard" Storyboard="{StaticResource RingRotateAnimate}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <ListBox Style="{StaticResource  ListBoxStyle1}" 
                 Width="100" Height="200"
                 ItemsPanel="{StaticResource  ItemsPanelTemplate}" HorizontalAlignment="Left" VerticalAlignment="Top">
            <ListBoxItem Content="ListBox 1"/>
            <ListBoxItem Content="ListBox 2"/>
            <ListBoxItem Content="ListBox 3"/>
            <ListBoxItem Content="ListBox 4"/>
            <ListBoxItem Content="ListBox 4"/>
            <ListBoxItem Content="ListBox 5"/>
            <ListBoxItem Content="ListBox 6"/>
            <ListBoxItem Content="ListBox 7"/>
            <ListBoxItem Content="ListBox 8"/>
            <ListBoxItem Content="ListBox 9"/>
            <ListBoxItem Content="ListBox 10"/>
            <ListBoxItem Content="ListBox 11"/>
            <ListBoxItem Content="ListBox 12"/>
            <ListBoxItem Content="ListBox 13"/>
            <ListBoxItem Content="ListBox 14"/>
            <ListBoxItem Content="ListBox 15"/>
        </ListBox>

        <ProgressBar Grid.ColumnSpan="2" 
                     IsIndeterminate="True"
                     Style="{StaticResource RingStyle.Circle}" 
                     Height="30" Width="30"/>
    </Grid>


</UserControl>
